(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{331:function(e,t,s){"use strict";s.r(t);const n=["altKey","metaKey","ctrlKey","shiftKey"];var i={props:{keyEvent:{type:String,default:"keyup"},keyCode:{type:Number,default:null},modifiers:{type:Array,default:()=>[]},preventDefault:{type:Boolean},multipleKeys:{type:Array,default:()=>[]}},data:()=>({keyListeners:[]}),mounted(){this.setupListeners()},destroyed(){for(const{keyEvent:e,listener:t}of this.keyListeners)window.removeEventListener(e,t)},methods:{setupListeners(){const e={keyEvent:this.keyEvent,keyCode:this.keyCode,preventDefault:this.preventDefault,modifiers:this.modifiers,multipleKeys:this.multipleKeys};this.addEventListener(e)},addEventListener(e){let t=this.eventHandler(e);window.addEventListener(e.keyEvent,t),this.keyListeners.push({expectedEvent:e,listener:t})},eventHandler(e){return t=>{const s=(s,n)=>{this.$emit(s,{event:t,expectedEvent:e,message:n})};s("any","Any key was pressed.");const i=e.multipleKeys.length>0;if(!e.keyCode&&!i)return void s("success","Any key was pressed.");let r=[e];i&&(r=e.multipleKeys);for(const i of r){if(!(i.keyCode===t.keyCode))continue;if(i.modifiers.length>0){if(!n.every(e=>t[e]==(-1!==i.modifiers.indexOf(e))))continue}return e.preventDefault&&t.preventDefault(),void s("success","Correct key(s) pressed.")}s("wrong","Wrong key(s) pressed.")}}},render:()=>null},r=s(1),d=Object(r.a)(i,void 0,void 0,!1,null,null,null);t.default=d.exports}}]);